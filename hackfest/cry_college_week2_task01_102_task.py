from week2 import finitefield

FLAG = '230033629043197786096403655617675079847541193884569513080010529417069378049917816555013459031982429468139436559346990454449837678185321265157846592654482132128848799505694782082332955726576333207857883973724269802922098949469426594'
# Task 1:
# The Prime is given as the first oakley group: https://tools.ietf.org/html/rfc2409#section-6.1
PRIME = """
FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1
29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD
EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245
E485B576 625E7EC6 F44C42E9 A63A3620 FFFFFFFF FFFFFFFF
"""
oakley_prime = int(PRIME.replace("\n", "").replace(" ", ""), 16)
F = finitefield.PrimeField(oakley_prime)
flag_num = int.from_bytes(FLAG.encode(), "big")
flag_elem = F(flag_num)
res = flag_elem*313373133731337313373133731337313373133731337313373133731337 + 1234567890
print(res.elem)
# output:
# 230033629043197786096403655617675079847541193884569513080010529417069378049917816555013459031982429468139436559346990454449837678185321265157846592654482132128848799505694782082332955726576333207857883973724269802922098949469426594
